// Generated by BUCKLESCRIPT VERSION 2.2.0, PLEASE EDIT WITH CARE
"use strict";

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var RenderChildren = require("./RenderChildren.bs.js");

function CreateContext(C) {
  var state = [C[/* defaultValue */ 1]];
  var subscriptions = [/* [] */ 0];
  var addSubscription = function(f) {
    subscriptions[0] = /* :: */ [f, subscriptions[0]];
    return function() {
      subscriptions[0] = List.filter(function(sub) {
        return +(sub !== f);
      })(subscriptions[0]);
      return /* () */ 0;
    };
  };
  var updateState = function(newStateOpt) {
    var newState = newStateOpt ? newStateOpt[0] : C[/* defaultValue */ 1];
    state[0] = newState;
    return List.iter(function(f) {
      return Curry._1(f, newState);
    }, subscriptions[0]);
  };
  var component = ReasonReact.statelessComponent(
    C[/* name */ 0] + "ContextProvider"
  );
  var make = function(value, children) {
    var newrecord = component.slice();
    newrecord[/* willReceiveProps */ 3] = function() {
      return updateState(value);
    };
    newrecord[/* didMount */ 4] = function() {
      updateState(value);
      return /* NoUpdate */ 0;
    };
    newrecord[/* render */ 9] = function() {
      return ReasonReact.element(
        /* None */ 0,
        /* None */ 0,
        RenderChildren.make(children)
      );
    };
    return newrecord;
  };
  var Provider = /* module */ [/* component */ component, /* make */ make];
  var component$1 = ReasonReact.reducerComponent(
    C[/* name */ 0] + "ContextConsumer"
  );
  var make$1 = function(children) {
    var newrecord = component$1.slice();
    newrecord[/* render */ 9] = function(param) {
      return Curry._1(children, param[/* state */ 2]);
    };
    newrecord[/* initialState */ 10] = function() {
      return state[0];
    };
    newrecord[/* reducer */ 12] = function(action, _) {
      return /* Update */ Block.__(0, [action[0]]);
    };
    newrecord[/* subscriptions */ 13] = function(param) {
      var send = param[/* send */ 4];
      return /* :: */ [
        /* Sub */ [
          function() {
            return addSubscription(function(newState) {
              return Curry._1(send, /* ChangeState */ [newState]);
            });
          },
          function(unSub) {
            return Curry._1(unSub, /* () */ 0);
          }
        ],
        /* [] */ 0
      ];
    };
    return newrecord;
  };
  var Consumer = /* module */ [/* component */ component$1, /* make */ make$1];
  return /* module */ [
    /* state */ state,
    /* subscriptions */ subscriptions,
    /* addSubscription */ addSubscription,
    /* updateState */ updateState,
    /* Provider */ Provider,
    /* Consumer */ Consumer
  ];
}

exports.CreateContext = CreateContext;
/* ReasonReact Not a pure module */
